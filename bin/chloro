#!/usr/bin/env perl

use 5.010;
use strict;
use warnings;
use lib qw(blib/lib);
use Chloro;

our $VERSION = '0.04';

my $cmd = Chloro->new({ no_help_plugin => 1, no_commands_plugin => 1 });
$cmd->default_command( $cmd->help ) and exit unless @ARGV;
$cmd->run;


__END__

=head1 NAME

Chloro - Automated chloroplast genome assembly

=head1 SYNOPSIS    

=head1 DESCRIPTION
     
This application will assist the process of creating a screening database of chloroplast genomes, then it will allow the screening of NGS reads against this database. Paired-end reads will be correctly paired and the screened reads will be assembled.

=head1 DEPENDENCIES

The Perl dependencies and the specific versions are listed below.

Module                Version
HTML::TableExtract    2.11
LWP::UserAgent        6.05
Parallel::ForkManager 1.05
IPC::System::Simple   1.21
App::Cmd              0.323
WWW::Mechanize
Time::HiRes
Try::Tiny
XML::LibXML

=head1 LICENSE
 
The MIT License should included with the project. 
If not, it can be found at: L<http://opensource.org/licenses/mit-license.php>

Copyright (C) 2014 S. Evan Staton
 
=head1 TESTED WITH:

=over

=item *
Perl 5.20.1 (Red Hat Enterprise Linux Server release 5.9 (Tikanga); Mac OS X 10.6.8)

=back

=head1 AUTHOR 

S. Evan Staton, C<< <statonse at gmail.com> >>

=head1 REQUIRED ARGUMENTS

=over 2

=item The method to perform. Must be one of the following:

      assemble: Run many chloroplast genome assemblies and pick the best one.
 cpbase_search: Download chloroplast genes or genomes from CpBase.
  screen_reads: Extract chloroplast regions from a read set.

=back

=head1 OPTIONS

=over 2

=item -h, --help

  Print a usage statement for a specific command. 

=item -m, --man
  
  Print the full documentation for a specific command.

=back

=cut
